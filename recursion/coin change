https://leetcode.com/problems/coin-change/description/
question is not optimized

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class backtrack{
    static int min = Integer.MAX_VALUE ;
    public static void coin(int[] arr ,ArrayList<Integer> list , int num , int target) {
        
        int i= 0;
        Arrays.sort(arr);
        for (int j = 0; j < arr.length; j++) {
            if(arr[j] < target){
                num = arr[i];
            }
        }
        list.add(num);
        
        solve(arr ,list , target, num );
        System.out.println(min);
    }
    public static void solve(int[] arr , ArrayList<Integer> list , int target , int sum   ){
        if(sum==target){
           min= Math.min(min ,list.size());
            return ;
        }
        if(sum >target){
            return ;
        }
        for (int i = 0; i <arr.length; i++) {
            
            list.add(arr[i]);
            System.out.println(i);
             solve(arr, list, target , sum+arr[i]);
            list.remove(list.size()-1); 
        }
       
    }
    
    public static void main(String[] args) {
       int[] arr = {1, 3, 4};
       int target = 6 ;
      
       coin(arr , new ArrayList<>() , 0 , target);
    
       
    
    }
}
